//
// Created by Artyom on 11.10.2023.
//

#ifndef BASICS_OF_PROGRAMMING_LABORATORY_WORK_3_H
#define BASICS_OF_PROGRAMMING_LABORATORY_WORK_3_H


#include <stdio.h>
#include <math.h>
#include <stdlib.h>

#include "../standart_function/standart_function.h"

/*
 * Водяная лилия 1199B codeforces
 *
 * Инесса плавала по озеру в лодке и заметила прекрасный цветок водяной лилии над поверхностью воды.
 * Она подплыла к цветку поближе и оказалось, что цветок находится на высоте H над уровнем воды.
 * Инесса взяла цветок и отплыла на расстояние L. В этот момент цветок коснулся воды.
 * Предположим, лилия растёт из точки A на дне озера, а стебель лилии всегда является отрезком
 * прямой, один из концов которого закреплён в точке A. Предположим также, что изначально цветок
 * находился прямо над точкой A, то есть стебель был вертикальным. Можете ли вы определить глубину
 * дна озера в точке A?
 */
void water_lily();;

/*
 * Даша и лестница 761A codeforces
 *
 * По пути на занятия по программированию тигра Дашу ждало первое испытание — огромная лестница!
 * Ступеньки лестницы были пронумерованы, начиная с единицы до бесконечности. Как известно, тигры
 * очень любят все чередующееся, не исключено, что это как-то связано с их окраской. Поэтому на
 * некотором отрезке своего пути она посчитала два числа — количество ступенек с чётными и
 * нечётными номерами.
 * Вам необходимо проверить, существует ли такой промежуток ступенек c l-й по r-ю (1 ≤ l ≤ r),
 * для которого числа, посчитанные Дашей, верны.
 */
void dasha_and_the_stairs();

/*
 * Середина контеста 1133A codeforces
 *
 * Поликарп собирается поучаствовать в контесте. Контест начинается в h1:m1 и кончается в h2:m2.
 * Гарантируется, что контест длится четное количество минут (то есть m1 % 2 = m2 % 2, где x % y
 * означает x, взятый по модулю y). Также гарантируется, что весь контест длится в течение одного дня.
 * И, наконец, гарантируется, что контест длится хотя бы две минуты.
 * Поликарп хочет узнать время середины контеста. Например, если контест длится с 10:00 до 11:00,
 * то ответом будет 10:30, если контест длится с 11:10 до 11:12, то ответом будет 11:11.
 */
void the_middle_of_the_contest();

/*
 * Чунга-Чанга 1181A codeforces
 *
 * Наше счастье постоянно — жуй кокосы, ешь бананы,
 * Жуй кокосы, ешь бананы, Чунга-чанга!
 * м/ф «Катерок»
 * После открытия острова «Чунга-Чанга» туда постепенно начала пробираться цивилизация и даже
 * стала развиваться рыночная экономика. Появилась и новая валюта — чижик. Теперь для того,
 * чтобы счастливо жевать кокосы, их нужно сначала купить под пальмой.
 * Саша и Маша проходили мимо пальмы, под которой продаются кокосы по цене z чижиков за штуку. У Саши
 * есть x чижиков, а у Маши y. Каждая из девочек собирается купить максимальное число кокосов, на
 * которое у неё хватит денег. Обсудив планы о покупке кокосов, девочки заметили, что если одна из
 * них передаст какое-то количество чижиков другой, то суммарное количество кокосов, которое они
 * купят, может от этого увеличиться (а может и уменьшиться). Кокосы не продаются по частям, то
 * есть каждая из девочек может купить только целое неотрицательное число кокосов. Чижики тоже не
 * могут быть разделены на части, то есть одна из девочек может передать другой только
 * целое неотрицательное число чижиков.
 * Например, предположим, что у Саши было 5 чижиков, у Маши 4, а один кокос стоит 3 чижика. Тогда,
 * если девочки не будут обмениваться чижиками, то они купят 1 + 1 = 2 кокоса. Если же Маша передаст
 * Саше один чижик, то у Саши их будет 6, а у Маши 3, и девочки купят 2 + 1 = 3 кокоса.
 * Жизнь на острове уже не так легка и проста, поэтому Саша и Маша хотят распределить деньги так,
 * чтобы суммарно купить как можно больше кокосов. При этом, никто не любит одалживать чижики,
 * поэтому среди всех способов, приводящих к максимальному количеству купленных кокосов, найдите
 * тот, который минимизирует число передаваемых между Сашей и Машей (неважно в какую сторону) чижиков.
 */
void chunga_changa();

/*
 * Отопление 1260A codeforces
 *
 * Несколько дней назад вы приобрели новый дом и сейчас планируете провести в нем капитальный ремонт.
 * Так как зимы в вашем регионе могут быть очень суровыми, вам нужно определиться с системой отопления
 * в каждой комнате.
 * У вас в доме n комнат. В i-й комнате вы можете установить не более ci радиаторов системы
 * отопления. Каждый радиатор может иметь несколько секций, но стоимость радиатора из k секций равна
 * k2 бурлей.
 * Так как комнаты имеют разные размеры, то вы рассчитали, что на обогрев i-й комнаты вам понадобится
 * как минимум sumi секций суммарно по всем радиаторам.
 * Для каждой комнаты посчитайте минимально возможную стоимость установки не более ci радиаторов
 * и суммарным количеством секций не менее sumi.
 */
void heating();

/*
 * Комментаторские кабинки 990A codeforces
 *
 * Чемпионат по футболу в Берляндии начнется уже скоро! На него съедутся комментаторы со всего мира.
 * Организаторы уже построили n комментаторских кабинок. Всего на Чемпионат приедут m различных
 * делегаций. С одной стороны, каждая делегация должна получить одинаковое количество кабинок. С
 * другой стороны, если останется хотя бы одна незанятая кабинка, все делегации сильно
 * расстроятся. Поэтому, каждая кабинка должна быть занята ровно одной делегацией.
 * Если n не делится на m, то в данный момент невозможно распределить комментаторские кабинки
 * по делегациям.
 * У организаторов все еще есть время, поэтому они могут строить кабинки, затрачивая a бурлей за
 * каждую, и (или) сносить кабинки, затрачивая на это b бурлей за каждую. Они могут как строить, так
 * и сносить произвольное количество кабинок (затрачивая на каждую соответствующее количество
 * бурлей). Они могут позволить себе даже снести все существующие кабинки.
 * Какое минимальное количество бурлей организаторы должны потратить, чтобы выполнить
 * требования делегаций (другими словами, сделать количество кабинок кратным m)?
 */
void commentator_booths();

/*
 * Пересдача 991A codeforces
 *
 * Успешная сдача экзамена — праздник для любого студента. Вот и Вася готов был отправиться отмечать
 * это знаменательное событие, но экзамен он не сдал. Однако, многие одногруппники Васи были
 * более успешны и пошли праздновать.
 * Часть из них отмечала успех в ресторане BugDonalds, часть — в ресторане BeaverKing, наиболее
 * успешные студенты успели на праздник в обоих ресторанах. Не сдавшие экзамен не пошли
 * праздновать. Подготовка к экзамену быстро надоела Васе и он занялся привычным делом —
 * просмотром фотографий в сети Kilogramm. Он посчитал, что BugDonalds всего посетило A студентов,
 * а BeaverKing — B студентов, при этом C студентов посетили оба ресторана. Наконец, Вася знает,
 * что всего в группе N студентов.
 * Основываясь на этой информации, Вася хочет определить, сколько же студентов его группы не
 * сдали экзамен? А может быть, его данные противоречивы? Помогите Васе разобраться с этой задачей,
 * чтобы он мог вернуться к подготовке к экзамену как можно скорее.
 */
void retake();

/*
 * Высота функции 1036A codeforces
 *
 * Задан набор из 2n + 1 целочисленных точек на декартовой плоскости. Точки пронумерованы от 0 до 2n
 * включительно. Пусть Pi — i-я точка. Тогда x-координата точки Pi равна i. y-координата точки Pi
 * равна нулю (изначально). Таким образом, изначально Pi = (i, 0).
 * Заданный набор точек является вершинами графика кусочной функции. j-й кусок функции — отрезок
 * PjP(j+1). За один ход вы можете увеличить на 1 y-координату любой точки с нечетной x-координатой
 * (то есть точек P1, P3, …, P(2n−1)). Заметьте, что соответствующие отрезки тоже меняются.
 * Например, график ниже иллюстрирует функцию для n = 3 (количество точек равно 2 ⋅ 3 + 1 = 7), в
 * которой мы увеличили y-координату точки P1 три раза и y-координату точки P5 один раз:
 * Пусть площадь графика равна площади под графиком, но над координатной прямой OX. Тогда площадь
 * графика на картинке выше равна 4 (голубая площадь на картинке выше — это площадь графика,
 * нарисованного на ней).
 * Пусть высота графика равна максимальной y-координате среди всех изначальных точек графика (то
 * есть точек P0, P1, …, P2n). Высота графика на картинке выше равна 3.
 * Ваша задача — найти, какую минимальную высоту может иметь график, состоящий из 2n + 1 вершин
 * с площадью, равной k. Заметьте, что необязательно минимизировать количество ходов.
 * Легко заметить, что любой ответ, который может быть получен при помощи применения описанных выше
 * ходов, всегда существует и является целым числом, не превосходящим 10^18.
 */
void function_height();

/*
 * Пара игрушек 1023B codeforces
 *
 * Танечка пришла в магазин игрушек. В магазине продается ровно n игрушек, i-я из них стоит i бурлей.
 * Она хочет выбрать две игрушки так, чтобы их суммарная стоимость была равна в точности k
 * бурлей. Сколькими способами она сможет это сделать?
 * Каждая игрушка присутствует в магазине в одном экземпляре. Пары (a, b) и (b, a) следует
 * считать одинаковыми. Пары (a, b), где a = b, недопустимы.
 */
void a_couple_of_toys();

/*
 * Посмотрим футбол 135A codeforces
 *
 * Валерик и Валерко пропустили последний матч чемпионата Европы по футболу и решили посмотреть
 * основные моменты этого матча в интернете. Им хочется побыстрее начать смотреть, но низкая
 * скорость соединения не позволяет этого сделать. Если сразу включить видео, то оно будет
 * «тормозить» из-за того, что размер данных, необходимых для просмотра одной секунды видео,
 * превышает размер данных, которые можно получить за одну секунду.
 * Ребята хотят посмотреть все видео целиком без задержек, поэтому они должны подождать некоторое
 * целое количество секунд, пока загрузится часть видео, а потом начинать смотреть. При этом
 * не обязательно чтобы видео загрузилось полностью, оно может продолжать загружаться после включения.
 * Предположим видео идет c секунд, а Валерик и Валерко подождут перед просмотром t секунд.
 * Тогда необходимо, чтобы для любого момента времени t0, t ≤ t0 ≤ c + t, выполнялось условие,
 * что количество данных, полученных за t0 секунд, не меньше, чем количество данных, необходимых
 * для просмотра t0 - t секунд видео.
 * Конечно же, ребята хотят ждать как можно меньше, поэтому вам предстоит найти минимальное
 * целое количество секунд, которое необходимо подождать перед включением видео, чтобы можно
 * было посмотреть его без задержек.
 */
void lets_watch_football();

/*
 * Кто напротив? 1560B codeforces
 *
 * Несколько человек (чётное количество) встали в круг. Люди стоят по кругу равномерно. Они
 * пронумерованы по часовой стрелке от 1, начиная с некоторого из них. Каждый смотрит через центр
 * круга на противоположного человека.
 * Вы не знаете, сколько конкретно человек стоит в круге (но их точно чётное количество). Известно,
 * что человек с номером a смотрит на человека с номером b (и, конечно, наоборот). На кого
 * смотрит человек с номером c? Если для заданных a, b и c такого круга не существует, то выведите -1.
 */
void who_is_opposite();

#endif //BASICS_OF_PROGRAMMING_LABORATORY_WORK_3_H
