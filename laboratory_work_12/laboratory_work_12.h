//
// Created by Artyom on 12.10.2023.
//

#ifndef BASICS_OF_PROGRAMMING_LABORATORY_WORK_12_H
#define BASICS_OF_PROGRAMMING_LABORATORY_WORK_12_H

#include <stdio.h>
#include <malloc.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>

#include "../standart_function/standart_function.h"
#include "../sorting/sorting.h"

/*
 * B. Ближайшее слева codeforces
 *
 * Дан массив из n чисел, отсортированный по неубыванию, и k запросов. Для каждого запроса
 * выведите максимальный индекс элемента массива, не большего данного.
 */
void nearest_on_the_left();

/*
 * C. Ближайшее справа codeforces
 *
 * Дан массив из n чисел, отсортированный по неубыванию, и k запросов. Для каждого запроса
 * выведите минимальный индекс элемента массива, не меньшего данного.
 */
void the_nearest_one_on_the_right();

/*
 * D. Быстрый поиск в массиве codeforces
 *
 * Дан массив a из n целых чисел a1, a2, …, an.
 * Нужно уметь отвечать на запросы вида «Сколько чисел имеют значения от l до r»?
 */
void quick_array_search();

/*
 * B. Веревочки codeforces
 *
 * Есть n веревочек, нужно нарезать из них k кусков одинаковой длины. Найдите максимальную длину
 * кусков, которые можно получить.
 */
void ropes();

/*
 * C. Очень Легкая Задача codeforces
 *
 * Сегодня утром жюри решило добавить в вариант олимпиады еще одну, Очень Легкую Задачу.
 * Ответственный секретарь Оргкомитета напечатал ее условие в одном экземпляре, и теперь ему нужно
 * до начала олимпиады успеть сделать еще n копий. В его распоряжении имеются два ксерокса, один
 * из которых копирует лист за x секунд, а другой — за y. (Разрешается использовать как один ксерокс,
 * так и оба одновременно. Можно копировать не только с оригинала, но и с копии.) Помогите ему
 * выяснить, какое минимальное время потребуется чтобы сделать n копий условия задачи.
 */
void a_very_easy_task();

/*
 * B. Ночная работа codeforces
 *
 * Однажды Васе поручили очень важное задание — написать за ночь программу, которая состоит из n
 * строк кода. Вася уже очень устал и поэтому работает по следующей схеме: сначала он пишет v строк
 * кода, выпивает стакан чая, после чего пишет уже |_(v/k)_| строк, опять выпивает стакан чая, после пишет
 * |_(v/k^2)_| строк и так далее: |_(v/k^3)_|, |_(v/k^4)_|, |_(v/k^5)_|, ...
 * Под выражением |_(a/b)_| понимается целая часть от деления числа a на число b.
 * Как только текущая величина |_(v/k^p)_| станет равной 0, Вася немедленно засыпает и просыпается
 * только утром, когда программа должна быть уже полностью написана.
 * Васе интересно, какое наименьшее допустимое значение может принимать величина v, чтобы успеть
 * написать не менее n строк кода до того момента, как он заснет.
 */
void night_work();

/*
 * C. Компьютерная игра codeforces
 *
 * Вова играет в компьютерную игру. Всего в игре есть n ходов и Вова очень хочет сыграть каждый из
 * них. Изначальный заряд батареи его ноутбука (то есть заряд перед началом игры) равен k.
 * В течение каждого хода Вова может выбрать, что именно делать:
 * Если текущий заряд батареи его ноутбука строго больше, чем a, то Вова может просто играть, и
 * тогда заряд батареи его ноутбука уменьшится на a;
 * если текущий заряд батареи его ноутбука строго больше, чем b (b < a), то Вова может играть и
 * заряжать свой ноутбук, и тогда заряд батареи его ноутбука уменьшится на b;
 * если текущий заряд батареи его ноутбука меньше либо равен, чем a и b одновременно, то Вова не
 * может сделать ничего и проигрывает игру.
 * Независимо от ходов Вовы заряд батареи ноутбука всегда уменьшается.
 * Вова хочет завершить игру (Вова может завершить игру, если после каждого из n ходов заряд батареи
 * его ноутбука строго больше 0). Вове необходимо сыграть ровно n ходов. Среди всех возможных
 * способов завершить игру Вова хочет выбрать такой, в котором количество ходов, где он просто
 * играет (ход первого типа) является максимально возможным. Также возможно, что Вова в принципе не
 * может завершить игру.
 * Ваша задача — найти максимально возможное количество ходов, которое Вова может просто играть
 * (делать ход первого типа) или сообщить, что Вова не может завершить игру.
 * Вам необходимо ответить на q независимых запросов.
 */
void computer_game();

/*
 * B. Книги codeforces
 *
 * Когда у Валеры появляется свободное время, он идет в библиотеку и читает книги. Вот и сегодня у
 * него появилось t свободных минут для чтения. Поэтому Валера взял n книг в библиотеке и для
 * каждой книги оценил: какое время потребуется, чтобы ее прочитать. Пронумеруем книги целыми числами
 * от 1 до n. Для прочтения i-той книги Валере требуется ai минут.
 * Валера решил, что он выберет произвольную книгу с номером i и будет читать книги друг за
 * другом, начиная с этой книги. Другими словами, сначала он прочитает книгу c номером i, затем книгу
 * с номером i + 1, затем книгу с номером i + 2 и так далее. Он продолжает этот процесс до тех пор,
 * пока либо не закончится его свободное время, либо не прочитает книгу с номером n. Каждую книгу
 * Валера читает целиком, то есть он не читает книгу, которую не успеет дочитать до конца из-за
 * нехватки свободного времени.
 * Посчитайте максимальное количество книг, которое Валера сможет прочитать.
 */
void books();

/*
 * B. Евгений и плейлист codeforces
 *
 * Евгений любит слушать музыку. В плейлисте Евгения играет n песен. Известно, что песня номер i
 * имеет продолжительность ti минут. Каждую песню плейлиста Евгений слушает, возможно, более одного
 * раза. Песню номер i он слушает ci раз. Плейлист Евгения построен следующим образом: сначала c1
 * раз играет песня номер 1, потом c2 раз играет песня номер 2, ..., в конце cn раз играет песня номер n.
 * Евгений выписал себе на листочек m моментов времени, в которые ему понравились песни. Теперь
 * для каждого такого момента, он хочет узнать номер песни, которая играла в этот момент времени.
 * Момент времени x обозначает, что Евгений хочет знать, какая песня играла в x-ую от начала
 * минуту прослушивания плейлиста.
 * Помогите Евгению, выведите требуемые номера песен.
 */
void eugene_and_the_playlist();

/*
 * B. Алена и узкий холодильник codeforces
 *
 * Недавно Алена купила миниатюрный холодильник, который может быть представлен как таблица из h строк
 * и 2 столбцов. Изначально в холодильнике лишь одна полка в самом низу, но Алена может установить
 * любое число полок внутрь холодильника между любыми двумя рядами. Все полки имеют ширину в две
 * клетки, не занимают места по вертикали, но разделяют холодильник на верхнюю и нижнюю части.
 * У Алены есть n бутылок молока, она хочет поставить их в холодильник. Высота i-й бутылки равна
 * ai клеток, а ширина любой бутылки равна 1 клетке. Алена может поставить бутылку на полку, если
 * высота свободного пространства над этой полкой не меньше высоты бутылки. Она не может ставить
 * бутылки друг на друга (если, конечно, между ними нет полки). Бутылки не могут занимать общие клетки
 * в таблице.
 * Алена хочет найти максимальное целое число k такое, что она может одновременно поставить бутылки
 * с номерами 1, 2, ..., k в холодильник. Найдите это наибольшее k.
 */
void alyona_and_the_narrow_refrigerator();

/*
 * A. Модные числа codeforces
 *
 * Как вам хорошо известно, в этом году самые модные числа — это так называемые треугольные числа
 * (то есть целые числа, представимые в виде (k(k + 1)) / 2, где k — некоторое целое положительное
 * число), а самые крутые — те, которые представимы в виде суммы двух треугольных.
 * Небезызвестный хипстер Андрей очень любит все модное и крутое, но, к сожалению, он не дружит
 * с математикой. Помогите ему по числу n сказать, раскладывается ли оно в сумму двух треугольных
 * чисел (не обязательно различных)!
 */
void fashionable_numbers();

/*
 * D. Пара тем codeforces
 *
 * На следующей лекции в университете нужно обсудить две темы. i-я тема интересна на ai единиц
 * для преподавателя и на bi единиц для студентов.
 * Пара тем i и j (i < j) называется хорошей, если ai + aj > bi + bj (т.е. эта пара тем более
 * интересна преподавателю).
 * Ваша задача — найти количество хороших пар тем.
 */
void a_couple_of_topics();

#endif //BASICS_OF_PROGRAMMING_LABORATORY_WORK_12_H
